# cargo-deny configuration for Release Regent
# See: https://embarkstudios.github.io/cargo-deny/

[licenses]
# The confidence threshold for detecting a license from a license text.
# 0.8 is a good default.
confidence-threshold = 0.8

# List of explicitly allowed licenses
allow = [
    "MIT",
    "Apache-2.0",
    "Apache-2.0 WITH LLVM-exception",
    "BSD-2-Clause",
    "BSD-3-Clause",
    "ISC",
    "Unicode-DFS-2016",
]

# List of explicitly disallowed licenses
deny = ["GPL-2.0", "GPL-3.0", "AGPL-1.0", "AGPL-3.0"]

# Lint level for when multiple versions of the same license are detected
multiple-versions = "warn"

# Confidence threshold for detecting a license from a license text.
# 0.8 is a good default, but you may want to specify a higher value to only
# accept licenses that are detected with a high degree of confidence.
# confidence-threshold = 0.8

[bans]
# Lint level for when multiple versions of the same crate are detected
multiple-versions = "warn"

# The confidence threshold for detecting a license from a license text.
# 0.8 is a good default.
deny = [
    # Each entry the name of a crate and a version range. If version is
    # not specified, all versions will be matched.
    #{ name = "ansi_term", version = "*" },
]

# Certain crates/versions that will be skipped when doing duplicate detection.
skip = [
    #{ name = "ansi_term", version = "=0.11.0" },
]

# Similarly to `skip` allows you to skip certain crates from duplicate
# detection. Unlike `skip`, it also includes the entire tree of transitive
# dependencies starting from the specified crate, up to a certain depth, which
# defaults to infinite.
skip-tree = [
    #{ name = "ansi_term", version = "=0.11.0", depth = 20 },
]

[sources]
# Lint level for what to happen when a crate from a crate registry that is
# not in the allow list is encountered
unknown-registry = "warn"

# Lint level for what to happen when a crate from a git repository that is not
# in the allow list is encountered
unknown-git = "warn"

# List of allowed crate registries
allow-registry = ["https://github.com/rust-lang/crates.io-index"]

# List of allowed Git repositories
allow-git = []

[advisories]
# The path where the advisory database is cloned/fetched into
db-path = "~/.cargo/advisory-db"

# The url(s) of the advisory databases to use
db-urls = ["https://github.com/rustsec/advisory-db"]

# The lint level for security vulnerabilities
vulnerability = "deny"

# The lint level for unmaintained crates
unmaintained = "warn"

# The lint level for crates that have been yanked from their source registry
yanked = "warn"

# The lint level for crates with security notices. Note that as of
# 2019-12-17 there are no security notice advisories in
# https://github.com/rustsec/advisory-db
notice = "warn"

# A list of advisory IDs to ignore. Note that ignored advisories will still
# output a note when they are encountered.
ignore = [
    #"RUSTSEC-0000-0000",
]
